@page "/matrixOps"
<head>
<style>
    table.setTable{
        margin-top: 25px;
    }
    input.matrixParam{
        width:30px;
        height:25px;
    }
    p.regularText{
        font-family:Arial;
    }
    #setText{
        margin-top:20px;
        margin-right:5px;
    }
    button.setBtn{
        margin-top:5px;
        border-radius:5px;
        background-color:#4681f4;
        color:white;
    }
    div.matrixes{
        margin-top:25px;
    }
    input.matrixInput{
        width:30px;
        height:25px;
    }
    td.spacerTd{
        width:60px;
    }
    
</style>
</head>

<center>

    <h3>MatrixOps</h3>

    <!--Set Menu-->
    <table class="setTable">
        <tr>
            <td><p class="regularText" id ="setText">Matrix rows:</p></td>
            <td><input class ="matrixParam" @bind="rows" /></td>
            <td style ="width:30px;"></td>
            <td><p class="regularText" id ="setText">Matrix columns:</p></td>
            <td><input class ="matrixParam" @bind="columns" /></td>
        </tr>
    </table>

    <!--Set Menu Button-->
    <button class="setBtn" @onclick="showMatrix">
        Set Matrixes
    </button>

    <!--Matrixes-->
    <div class="matrixes">
        <table class ="matrixes">
            <tr>
                <td> <!--matrix A-->
                    <center><p class="regularText">Matrix A</p></center>
                    
                    @for(int i = 0; i < intRows; i++)
                    {            
                        for( int j = 0; j < intColumns; j++)
                        {
                            <input class="matrixInput" id="matrixBoxA@(i)_@(j)" @bind="matrixA[i,j]" type="text" />
                        }
                        <br />
                        
                    }
                </td>

                <td class ="spacerTd"><!--spacer-->
                        <!-- + button-->
                    <center><button class ="calcBtn" @onclick="add">+</button></center>
                </td>

                <td> <!--matrix B-->
                    <center><p class="regularText">Matrix B</p></center>
                    
                    @for(int i = 0; i < intRows; i++)
                    {            
                        for( int j = 0; j < intColumns; j++)
                        {
                            <input class="matrixInput" type="text" />
                        }
                        <br />
                        
                    }
                </td>

                <td class ="spacerTd"><!--spacer-->
                    <center><h4>=</h4></center>
                </td>

                <td> <!--matrix Result-->
                    <center><p class="regularText">Result Matrix</p></center>
                    
                    @for(int i = 0; i < intRows; i++)
                    {            
                        for( int j = 0; j < intColumns; j++)
                        {
                            <input class="matrixInput" type="text" />
                        }
                        <br />
                        
                    }
                </td>
            </tr>
        </table>
    
    </div> <!--End of Matrix Div-->  
    
    <input class="testInput" type="text" @bind="testString"/>
</center>

@code {
    public string? rows;
    public string? columns;
    public int intRows = 0;
    public int intColumns;

    public int[,] matrixA;
    public string[,] testMatrix;
    public string testString = "test";

    //private bool hideBox {get;set;} = true;


    private void showMatrix()
    {
        intRows = int.Parse(rows);
        intColumns = int.Parse(columns);
        matrixA = new int[intRows,intColumns];
        testMatrix = new string [intRows,intColumns];
        //hideBox = !hideBox;
        //hideBox = !hideBox;

    }

    private void add()
    {
        int rows = intRows;
        int columns = intColumns;
        

        for(int i = 0; i < matrixA.GetLength(0); i++)
        {
            for(int j = 0; j< matrixA.GetLength(1); j++)
            {
                testString += matrixA[i, j].ToString();
            }
        }

    }
}
